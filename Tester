-- Define the lock-on distance
local lockOnDistance = 50  -- Maximum distance to lock onto a target

-- Function to find the nearest player's head
local function findNearestPlayerHead(player)
    local nearestHead = nil
    local shortestDistance = lockOnDistance

    -- Loop through all players in the game
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        -- Skip if the other player is the same as the local player
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
            -- Get the distance between the player's head and the other player's head
            local distance = (player.Character.Head.Position - otherPlayer.Character.Head.Position).magnitude

            -- Update the nearest head if it's closer than the previous one
            if distance < shortestDistance then
                nearestHead = otherPlayer.Character.Head
                shortestDistance = distance
            end
        end
    end

    return nearestHead
end

-- Function to lock on to the nearest player's head
local function lockOnToNearestHead()
    local player = game.Players.LocalPlayer

    -- Ensure the player character exists and has a head
    if player.Character and player.Character:FindFirstChild("Head") then
        -- Find the nearest player head to lock onto
        local targetHead = findNearestPlayerHead(player)

        -- If a target head is found, make the player's camera look at it
        if targetHead then
            -- Adjust camera to face the target head
            local camera = workspace.CurrentCamera
            camera.CFrame = CFrame.new(camera.CFrame.Position, targetHead.Position)
        end
    end
end

-- Run the lock-on function repeatedly
game:GetService("RunService").RenderStepped:Connect(lockOnToNearestHead)
